<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>blueprint-web</artifactId>
	<name>Blueprint Web</name>

	<parent>
		<groupId>com.haddouti.pg</groupId>
		<artifactId>blueprint-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../blueprint-parent/pom.xml</relativePath>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<springfox.version>2.7.0</springfox.version>

		<dropwizard.metrics.version>3.2.2</dropwizard.metrics.version>
		
		<!-- Docker -->
		<spotify.docker.version>1.3.0</spotify.docker.version>
		<docker.src.dir>${project.basedir}/src/main/docker</docker.src.dir>
		<docker.build.dir>${project.build.directory}/docker</docker.build.dir>
		<docker.image.prefix>${project.groupId}</docker.image.prefix>
		<docker.repository>haf-tech/blueprint</docker.repository>
	</properties>

	<dependencies>

		<!-- Internal libs -->
		<dependency>
			<groupId>com.haddouti.pg</groupId>
			<artifactId>blueprint-ejb</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.haddouti.pg</groupId>
			<artifactId>blueprint-infra</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- API: Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
			<scope>provided</scope>
		</dependency>

		<!-- *** Spring *** -->
		<!-- Spring: Production ready features, like monitoring and health check 
			endpoints -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Metrics -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>${dropwizard.metrics.version}</version>
		</dependency>

		<!-- Swagger Support -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<build>


		<plugins>

			<!-- ####################################################### -->
			<!-- ################# Spring Boot ######################### -->
			<!-- ####################################################### -->

			<plugin>
				<!-- Goal of plugin: - create one big fat jar - scan to find the main 
					class - build in dependency resolver for Spring versions -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dockerbuild</id>
			<build>
				<plugins>

					<!-- ####################################################### -->
					<!-- ############ Docker Integration ####################### -->
					<!-- ####################################################### -->


					<!-- Docker plugin: mvn dockerfile:build For the docker container is 
						it necessary, to have all relevant files (Dockerfile, jar(s)) into a working 
						directory. For this we use maven-dependency-plugin -->

					<!-- Copy the Dockerfile into target docker directory. -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.0.2</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${docker.build.dir}</outputDirectory>
									<resources>
										<resource>
											<directory>${docker.src.dir}</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Copy target jar into the docker dir -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<!-- Specify the lib, our application. -->
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<version>${project.version}</version>
											<type>jar</type>
											<overWrite>true</overWrite>
											<outputDirectory>${docker.build.dir}</outputDirectory>
											<!-- Specify the destination name WITHOUT version number -->
											<destFileName>${project.artifactId}.jar</destFileName>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${docker.build.directory}</outputDirectory>
									<overWriteReleases>true</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${spotify.docker.version}</version>
						<executions>
							<execution>
								<id>docker</id>
								<goals>
									<!-- build docker image -->
									<goal>build</goal>
									<!-- push to registry <goal>push</goal> -->
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>${docker.repository}</repository>
							<tag>${project.version}</tag>
							<contextDirectory>${docker.build.dir}</contextDirectory>
							<!-- <resources> <resource> <targetPath>/</targetPath> <directory>${project.build.directory}</directory> 
								<include>${project.build.finalName}.jar</include> </resource> </resources> -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>