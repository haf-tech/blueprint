<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.haddouti.pg</groupId>
	<artifactId>blueprint-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Blueprint Parent</name>
	<organization>
		<name>Haf-Tech-Centre</name>
	</organization>

	<modules>
		<module>../blueprint-ejb</module>
		<module>../blueprint-infra</module>
		<module>../blueprint-web</module>
	</modules>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<junit.version>4.12</junit.version>
		<mockito.version>2.8.47</mockito.version>


		<spring.version>4.3.9.RELEASE</spring.version>
		<!-- Spring Boot. Only this version. 1.5.4 has problems with Actuator and 
			Jackson dependencies -->
		<spring.boot.version>1.5.2.RELEASE</spring.boot.version>

		<!-- AsciiDoctor: Maven build date format -->
		<asciidoctorj.version>1.5.5</asciidoctorj.version>
		<asciidoctorj.pdf.version>1.5.0-alpha.11</asciidoctorj.pdf.version>
		<asciidoctorj.diagram.version>1.5.4</asciidoctorj.diagram.version>
		<asciidoc.base.output.dir>target/generated-docs/${project.version}</asciidoc.base.output.dir>
		<asciidoc.gen.dir>${project.build.directory}/asciidoc/generated</asciidoc.gen.dir>
		<maven.build.timestamp.format>yyyy-MM-dd HH</maven.build.timestamp.format>

	<!-- <swagger2markup.version>1.3.1</swagger2markup.version> -->
	<!-- <swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir> -->
	<!-- <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir> -->
	<!-- <swagger.input>${swagger.output.dir}/swagger.json</swagger.input> -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- ************ Spring *********** -->
			<!-- Consider: spring-boot-dependencies should be the last spring lib. 
				To override some other spring modules, place them BEFORE with scope=import 
				and type=pom -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>1.5.2.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>


			<!-- Test -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- ####################################################### -->
			<!-- ############### General Plugins ####################### -->
			<!-- ####################################################### -->

			<!-- Maven compiler plugin: setting JDK version, for Mave Update Configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>



			<!-- ####################################################### -->
			<!-- ################# Documentation ####################### -->
			<!-- ####################################################### -->

			<!-- Swagger2Markup plugin to generate the swagger AsciiDoctor files <plugin> 
				<groupId>io.github.swagger2markup</groupId> <artifactId>swagger2markup-maven-plugin</artifactId> 
				<version>${swagger2markup.version}</version> <dependencies> <dependency> 
				<groupId>io.github.swagger2markup</groupId> <artifactId>swagger2markup-import-files-ext</artifactId> 
				<version>${swagger2markup.version}</version> </dependency> <dependency> <groupId>io.github.swagger2markup</groupId> 
				<artifactId>swagger2markup-spring-restdocs-ext</artifactId> <version>${swagger2markup.version}</version> 
				</dependency> </dependencies> <configuration> <swaggerInput>${swagger.input}</swaggerInput> 
				<outputDir>${asciidoc.gen.dir}</outputDir> <config> <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage> 
				<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy> <swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/docs/asciidoc/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath> 
				<swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/docs/asciidoc/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath> 
				<swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath> 
				<swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/docs/asciidoc/extensions/security/</swagger2markup.extensions.dynamicSecurity.contentPath> 
				<swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}</swagger2markup.extensions.springRestDocs.snippetBaseUri> 
				<swagger2markup.extensions.springRestDocs.defaultSnippets>true</swagger2markup.extensions.springRestDocs.defaultSnippets> 
				</config> </configuration> <executions> <execution> <phase>generate-resources</phase> 
				<goals> <goal>convertSwagger2markup</goal> </goals> </execution> </executions> 
				</plugin> -->



			<!-- AsciiDoctor - http://asciidoctor.org/ AsciiDoctorJ Extension: https://github.com/asciidoctor/asciidoctorj -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.5</version>
				<dependencies>
					<!-- AsciiDoctorJ enhancement to support PDF and Diagram output -->
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>${asciidoctorj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>${asciidoctorj.pdf.version}</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-diagram</artifactId>
						<version>${asciidoctorj.diagram.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<!-- Different executions to generate different output formats -->
					<execution>
						<id>output-html</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html</backend>
							<outputDirectory>${asciidoc.base.output.dir}/html</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>output-docbook</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>docbook</backend>
							<doctype>book</doctype>
							<outputDirectory>${asciidoc.base.output.dir}/dockbook</outputDirectory>
						</configuration>
					</execution>
					<!-- -->
					<execution>
						<id>output-pdf</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>pdf</backend>
							<outputDirectory>${asciidoc.base.output.dir}/pdf</outputDirectory>
							<attributes>
								<!-- expects images always under src/main/asciidoc <imagesdir>../../../target/generated-docs/${project.version}/images/</imagesdir> -->
								<imagesdir>${project.build.directory}/generated-docs/${project.version}/pdf/images/</imagesdir>
							</attributes>
						</configuration>
					</execution>
				</executions>
				<!-- General configuration for all doctypes -->
				<configuration>
					<!-- Output doc in separate version directory -->
					<outputDirectory>${asciidoc.base.output.dir}</outputDirectory>
					<requires>
						<require>asciidoctor-diagram</require>
					</requires>
					<attributes>
						<project-version>${project.version}</project-version>
						<revnumber>${project.version}</revnumber>
						<revdate>${maven.build.timestamp}</revdate>
						<organization>${project.organization.name}</organization>
						<generated>${asciidoc.gen.dir}</generated>
					</attributes>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.asciidoctor
										</groupId>
										<artifactId>
											asciidoctor-maven-plugin
										</artifactId>
										<versionRange>
											[1.5.5,)
										</versionRange>
										<goals>
											<goal>
												process-asciidoc
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- Necessary to avoid the m2eclipse problem with "plugin execution 
											not covered by lifecycle configuration" -->
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>